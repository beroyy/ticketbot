# ===========================================
# TICKETSBOT ENVIRONMENT CONFIGURATION
# ===========================================
# Copy this file to .env and fill in your values

# Core Configuration (Required)
# ---------------------------
NODE_ENV=development
DATABASE_URL=postgresql://user:password@localhost:5432/ticketsbot
BETTER_AUTH_SECRET=your-secret-must-be-at-least-32-characters-long

# Discord Configuration (Required)
# -------------------------------
DISCORD_TOKEN=your-bot-token
DISCORD_CLIENT_ID=123456789012345678
DISCORD_CLIENT_SECRET=your-discord-client-secret

# Service URLs (Required)
# ----------------------
# These must be explicitly set for each environment
WEB_URL=http://localhost:3000
API_URL=http://localhost:3001

# Web App Specific (Optional)
# --------------------------
# Only required when running the Next.js web app
# NEXT_PUBLIC_API_URL=http://localhost:3001

# Optional Services
# ----------------
# Redis for caching and job queues
REDIS_URL=redis://localhost:6379

# Optional Configuration
# ---------------------
# Ports (defaults shown)
# WEB_PORT=3000
# API_PORT=3001
# BOT_PORT=3002

# Logging (smart defaults based on NODE_ENV)
# LOG_LEVEL=debug         # (debug in dev, warn in prod)
# LOG_REQUESTS=true       # (true in dev, false in prod)

# CORS (comma-separated additional origins)
# ALLOWED_ORIGINS=http://localhost:3002,http://localhost:9000

# Cookies (only useful for subdomains, not cross-domain)
# COOKIE_DOMAIN=.ticketsbot.dev

# Rate limiting
# RATE_LIMIT_ENABLED=false  # (false in dev, true in prod)

# Feature Flags
# ------------
# NEXT_PUBLIC_FEATURE_NEW_TICKET_UI=false
# NEXT_PUBLIC_FEATURE_BULK_ACTIONS=false
# NEXT_PUBLIC_FEATURE_ADVANCED_FORMS=false
# NEXT_PUBLIC_GUILD_ID=123456789012345678

# Development Helpers
# ------------------
# Override permissions in development (e.g., 0xfffffff for all permissions)
# DEV_PERMISSIONS_HEX=0xfffffff

# Default guild for development
# DEV_GUILD_ID=123456789012345678

# Auto-seed database when running pnpm docker:dev
# DEV_DB_AUTO_SEED=true

# ===========================================
# DEPLOYMENT CONFIGURATION
# ===========================================
#
# Render.com (API + Bot)
# ---------------------
# Set these environment variables in your Render service:
#
# • NODE_ENV=production
# • DATABASE_URL=<your-neon-pooled-connection-url>
# • BETTER_AUTH_SECRET=<your-32-character-secret>
# • DISCORD_TOKEN=<your-bot-token>
# • DISCORD_CLIENT_ID=<your-discord-app-id>
# • DISCORD_CLIENT_SECRET=<your-discord-secret>
# • WEB_URL=<your-vercel-web-url>
# • API_URL=<your-render-api-url>
# • REDIS_URL=<your-upstash-redis-url>
#
# Note: Render will automatically set PORT env var
#
# Vercel (Web Dashboard)
# ---------------------
# Set these environment variables in your Vercel project:
#
# • NODE_ENV=production
# • DATABASE_URL=<same-neon-connection-as-render>
# • BETTER_AUTH_SECRET=<same-secret-as-render>
# • DISCORD_CLIENT_ID=<same-as-render>
# • DISCORD_CLIENT_SECRET=<same-as-render>
# • WEB_URL=<your-vercel-url>
# • API_URL=<your-render-api-url>
# • NEXT_PUBLIC_API_URL=<same-as-API_URL>
# • REDIS_URL=<same-upstash-url-as-render>
#
# ===========================================
# NOTES
# ===========================================
#
# 1. URLs must be explicitly set - no auto-derivation
# 2. DIRECT_URL is no longer needed (Prisma 6.12+ supports pooled connections)
# 3. Discord redirect URI is constructed as: ${API_URL}/auth/callback/discord
# 4. Cookies won't be shared between different domains (Vercel/Render)
# 5. Auth works via authorization headers, not shared cookies
#
# For local development with all services:
# - Web: http://localhost:3000
# - API: http://localhost:3001
# - Bot: connects to Discord
#
# Run 'pnpm docker:dev' to start PostgreSQL and Redis locally
# Run 'pnpm dev' to start all services