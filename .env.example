# ===========================================
# TICKETSBOT ENVIRONMENT CONFIGURATION
# ===========================================
# Copy this file to .env and fill in your values

# ===========================================
# SHARED CONFIGURATION (Required by all apps)
# ===========================================

# Core
NODE_ENV=development
DATABASE_URL=postgresql://user:password@localhost:5432/ticketsbot
BETTER_AUTH_SECRET=your-secret-must-be-at-least-32-characters-long

# Discord
DISCORD_TOKEN=your-bot-token
DISCORD_CLIENT_ID=123456789012345678
DISCORD_CLIENT_SECRET=your-discord-client-secret

# Service URLs (Required by all apps)
WEB_URL=http://localhost:3000
API_URL=http://localhost:3001

# Optional Services (Used by all apps)
# Redis for caching and job queues
REDIS_URL=redis://localhost:6379

# Development Helpers (Optional for all apps)
# Override permissions in development (e.g., 0xfffffff for all permissions)
# DEV_PERMISSIONS_HEX=0xfffffff
# Default guild for development
# DEV_GUILD_ID=123456789012345678
# Auto-seed database when running pnpm docker:dev
# DEV_DB_AUTO_SEED=true

# ===========================================
# API-SPECIFIC CONFIGURATION
# ===========================================

# API Configuration (Optional - have defaults)
# API_HOST=0.0.0.0
# API_PORT=3001
# API_SECRET=your-api-secret-32-characters

# Rate Limiting (Optional)
# RATE_LIMIT_ENABLED=false      # (false in dev, true in prod)
# RATE_LIMIT_WINDOW=60000        # milliseconds
# RATE_LIMIT_MAX=100             # requests per window

# CORS (Optional)
# ALLOWED_ORIGINS=http://localhost:3002,http://localhost:9000

# ===========================================
# BOT-SPECIFIC CONFIGURATION
# ===========================================

# Bot Configuration (Optional - have defaults)
# BOT_PORT=3002
# DISCORD_BOT_PREFIX=!
# DISCORD_BOT_STATUS=Helping users with tickets

# ===========================================
# WEB-SPECIFIC CONFIGURATION
# ===========================================

# Required for Web App (must match API_URL in production)
NEXT_PUBLIC_API_URL=http://localhost:3001

# Web Configuration (Optional - have defaults)
# WEB_PORT=3000

# Feature Flags (Optional)
# NEXT_PUBLIC_FEATURE_NEW_TICKET_UI=false
# NEXT_PUBLIC_FEATURE_BULK_ACTIONS=false
# NEXT_PUBLIC_FEATURE_ADVANCED_FORMS=false
# NEXT_PUBLIC_GUILD_ID=123456789012345678

# Web-Specific (Optional)
# NEXT_TELEMETRY_DISABLED=true
# COOKIE_DOMAIN=.ticketsbot.dev    # Only useful for subdomains

# ===========================================
# LOGGING CONFIGURATION (Optional for all apps)
# ===========================================

# Logging (smart defaults based on NODE_ENV)
# LOG_LEVEL=debug         # (debug in dev, warn in prod)
# LOG_REQUESTS=true       # (true in dev, false in prod)

# ===========================================
# DEPLOYMENT CONFIGURATION
# ===========================================
#
# Render.com (API + Bot)
# ---------------------
# Required environment variables:
#
# • NODE_ENV=production
# • DATABASE_URL=<your-neon-pooled-connection-url>
# • BETTER_AUTH_SECRET=<your-32-character-secret>
# • DISCORD_TOKEN=<your-bot-token>
# • DISCORD_CLIENT_ID=<your-discord-app-id>
# • DISCORD_CLIENT_SECRET=<your-discord-secret>
# • WEB_URL=<your-vercel-web-url>
# • API_URL=<your-render-api-url>
# • REDIS_URL=<your-upstash-redis-url>
#
# Note: Render will automatically set PORT env var
#
# Vercel (Web Dashboard)
# ---------------------
# Required environment variables:
#
# • NODE_ENV=production
# • DATABASE_URL=<same-neon-connection-as-render>
# • BETTER_AUTH_SECRET=<same-secret-as-render>
# • DISCORD_CLIENT_ID=<same-as-render>
# • DISCORD_CLIENT_SECRET=<same-as-render>
# • WEB_URL=<your-vercel-url>
# • API_URL=<your-render-api-url>
# • NEXT_PUBLIC_API_URL=<same-as-API_URL>
# • REDIS_URL=<same-upstash-url-as-render>
#
# ===========================================
# NOTES
# ===========================================
#
# 1. Each app validates only the env vars it needs
# 2. URLs must be explicitly set - no auto-derivation
# 3. Discord redirect URI is constructed as: ${API_URL}/auth/callback/discord
# 4. Cookies won't be shared between different domains (Vercel/Render)
# 5. Auth works via authorization headers, not shared cookies
#
# For local development with all services:
# - Web: http://localhost:3000
# - API: http://localhost:3001
# - Bot: connects to Discord
#
# Run 'pnpm docker:dev' to start PostgreSQL and Redis locally
# Run 'pnpm dev' to start all services